# Prototype
snippet proto
	${1:Constructor}.prototype.${2:methodName} = function (${3:arguments}) {
		${4:// body}
	};
# Function
snippet fun
	function ${1:function_name}(${2:argument}) {
		${3:// body}
	}
# Anonymous Function
#snippet f
#	function (${1}) {${2}};
# if
snippet if
	if (${1:true}) {
		${2}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet t
	${1:1 === 1} ? ${2:true} : ${3:false}
# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3: += 1}) {
		${4:$1[$2]}
	}
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object
snippet o
	{
		${1:key}: ${2:value},${3:}
	}
snippet v
	${1:key}: ${2:value},${3:}
# Object Method
#snippet :f
#	${1:method_name}: function (${2:attribute}) {
#		${4}
#	}${3:,}
# setTimeout function
snippet tout
	setTimeout(function () {
		${3}
	}, ${1:1000})
snippet var
	var ${1:variable} = ${2:/* value */};
